@using VVS_System.Models
@model VVS_System.Models.UserModel

@{
    ViewBag.Title = "title";
}

<script>
    function subscribe(user, action) {
        var xmlhttp;
        if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
            xmlhttp = new XMLHttpRequest();
        }
        else {// code for IE6, IE5
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
        }
        xmlhttp.onreadystatechange = function () {
            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                var test = JSON.parse(xmlhttp.responseText);

                if (test.url != undefined) {
                    location.href = test.url;
                } else {
                    var element = document.getElementById("subscribe");

                    if (element.innerText == "Subscribe" || element.textContent == "Subscribe") {
                        if ((element.textContent) && (typeof (element.textContent) != "undefined")) {
                            element.textContent = "Unsubscribe";
                        } else {
                            element.innerText = "Unsubscribe";
                        }
                    } else {
                        if ((element.textContent) && (typeof (element.textContent) != "undefined")) {
                            element.textContent = "Subscribe";
                        } else {
                            element.innerText = "Subscribe";
                        }
                    }
                }
            }
        };
        xmlhttp.open("POST", action);
        xmlhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        xmlhttp.send("user=" + user);
    }
</script>

<h2>@Model.User.Name</h2>
<button id="subscribe" style="margin-left: 20px;" type="button" onclick="subscribe(@Model.User.ID, '@Url.Action("Subscribe","VideoVisualization")') " class="btn btn-danger">@Model.Subscription</button>
<br/>

<legend>Uploaded videos</legend>
<div style ="margin-left: 15px">
    <label class="">Number of videos posted: </label>
    @Html.DisplayTextFor(m => m.Videos.Count)
</div>

@if (Model.Videos.Count != 0)
{
    <div style="margin-left: 15px">
        <label class="label label-default">List of videos </label>
        <div class="list-group">
            @foreach (Video v in Model.Videos)
            {
                    @Html.ActionLink(v.Name, "Advertisement", "VideoVisualization", new { video = v.ID }, new { @class = "list-group-item" })
                }
        </div>
    </div>
}


<legend>Comments made </legend>


<div id="comments">

    @foreach (VVS_System.Models.Comment c in Model.Comments)
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title"><strong>@c.Video.Name</strong> <small> [@c.FormatDate]</small></h3>
            </div>
            <div class="panel-body">
                @c.Text
            </div>
        </div>
    }

</div>

<legend>Subscribed channels</legend>

<div style="margin-left: 15px">
    <label class="">Number of subscribed channels: </label>
    @Html.DisplayTextFor(m => m.User.Subscribe.Count)
</div>

@if (Model.User.Subscribe.Count != 0)
{
    <div style="margin-left: 15px">
        <label class="label label-default">List of subscriptions </label>
        <div class="list-group">
            @foreach (User u in Model.User.Subscribe)
            {
                @Html.ActionLink(u.Name, "Profile", "User", new { user = u.ID }, new { @class = "list-group-item" })
            }
        </div>
    </div>
}

<legend>Subscriptions </legend>

<div style="margin-left: 15px">
    <label class="">Number of subscriptions: </label>
    @Html.DisplayTextFor(m => m.User.Subscribed.Count)
</div>

@if (Model.User.Subscribed.Count != 0)
{
    <div style="margin-left: 15px">
        <label class="label label-default">List of subscribed channels </label>
        <div class="list-group">
            @foreach (User u in Model.User.Subscribed)
            {
                @Html.ActionLink(u.Name, "Profile", "User", new { user = u.ID }, new { @class = "list-group-item" })
            }
        </div>
    </div>
}

<legend>Favourites</legend>

<div style="margin-left: 15px">
    <label>Number of favourite videos: </label>
    @Html.DisplayTextFor(m => m.User.Favourites.Count)
</div>

@if (Model.User.Favourites.Count != 0)
{
    <div>
        <label class="label label-default">List of favourite videos: </label>
        <div>
            <div class="list-group">
                @foreach (Video v in Model.User.Favourites)
                {
                    @Html.ActionLink(v.Name, "Advertisement", "VideoVisualization", new { video = v.ID }, new { @class = "list-group-item" })
                }
            </div>
        </div>
    </div>
}
