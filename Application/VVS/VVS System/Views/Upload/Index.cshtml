@model VVS_System.Models.Video

@{
    ViewBag.Title = "Index";
}

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>
<style>
    #dragandrophandler {
        bvideo: 2px dotted #0B85A1;
        width: 400px;
        height: 200px;
        color: #92AAB0;
        text-align: left;
        vertical-align: middle;
        padding: 10px 10px 10 10px;
        margin-bottom: 10px;
        font-size: 200%;
    }

    .progressBar {
        width: 200px;
        height: 22px;
        bvideo: 1px solid #ddd;
        bvideo-radius: 5px;
        overflow: hidden;
        display: inline-block;
        margin: 0px 10px 5px 5px;
        vertical-align: top;
    }

        .progressBar div {
            height: 100%;
            color: #fff;
            text-align: right;
            line-height: 22px; /* same as #progressBar height if we want text middle aligned */
            width: 0;
            background-color: #0ba1b5;
            bvideo-radius: 3px;
        }

    .statusbar {
        bvideo-top: 1px solid #A9CCD1;
        min-height: 25px;
        width: 700px;
        padding: 10px 10px 0px 10px;
        vertical-align: top;
    }

        .statusbar:nth-child(odd) {
            background: #EBEFF0;
        }

    .filename {
        display: inline-block;
        vertical-align: top;
        width: 250px;
    }

    .filesize {
        display: inline-block;
        vertical-align: top;
        color: #30693D;
        width: 100px;
        margin-left: 10px;
        margin-right: 5px;
    }

    .abort {
        background-color: #A8352F;
        -moz-bvideo-radius: 4px;
        -webkit-bvideo-radius: 4px;
        bvideo-radius: 4px;
        display: inline-block;
        color: #fff;
        font-family: arial;
        font-size: 13px;
        font-weight: normal;
        padding: 4px 15px;
        cursor: pointer;
        vertical-align: top;
    }
</style>
<div id="dragandrophandler">Drag & Drop Files Here</div>
<br><br>
<div id="status1"></div>
<script>
    function sendFileToServer(formData, status) {
        var uploadURL = '@Url.Action("UploadFiles", "Upload")'; //Upload URL
        var extraData = {}; //Extra Data.
        var jqXHR = $.ajax({
            xhr: function () {
                var xhrobj = $.ajaxSettings.xhr();
                if (xhrobj.upload) {
                    xhrobj.upload.addEventListener('progress', function (event) {
                        var percent = 0;
                        var position = event.loaded || event.position;
                        var total = event.total;
                        if (event.lengthComputable) {
                            percent = Math.ceil(position / total * 100);
                        }
                        //Set progress
                        status.setProgress(percent);
                    }, false);
                }
                return xhrobj;
            },
            url: uploadURL,
            type: "POST",
            contentType: false,
            processData: false,
            cache: false,
            data: formData,
            success: function (data) {
                status.setProgress(100);

                $("#status1").append("File upload Done<br>");
            }
        });

        status.setAbort(jqXHR);
    }

    var rowCount = 0;
    function createStatusbar(obj) {
        rowCount++;
        var row = "odd";
        if (rowCount % 2 == 0) row = "even";
        this.statusbar = $("<div class='statusbar " + row + "'></div>");
        this.filename = $("<div class='filename'></div>").appendTo(this.statusbar);
        this.size = $("<div class='filesize'></div>").appendTo(this.statusbar);
        this.progressBar = $("<div class='progressBar'><div></div></div>").appendTo(this.statusbar);
        this.abort = $("<div class='abort'>Abort</div>").appendTo(this.statusbar);
        obj.after(this.statusbar);

        this.setFileNameSize = function (name, size) {
            var sizeStr = "";
            var sizeKB = size / 1024;
            if (parseInt(sizeKB) > 1024) {
                var sizeMB = sizeKB / 1024;
                sizeStr = sizeMB.toFixed(2) + " MB";
            }
            else {
                sizeStr = sizeKB.toFixed(2) + " KB";
            }

            this.filename.html(name);
            this.size.html(sizeStr);
        }
        this.setProgress = function (progress) {
            var progressBarWidth = progress * this.progressBar.width() / 100;
            this.progressBar.find('div').animate({ width: progressBarWidth }, 10).html(progress + "% ");
            if (parseInt(progress) >= 100) {
                this.abort.hide();
            }
        }
        this.setAbort = function (jqxhr) {
            var sb = this.statusbar;
            this.abort.click(function () {
                jqxhr.abort();
                sb.hide();
            });
        }
    }
    function handleFileUpload(files, obj) {
        for (var i = 0; i < files.length; i++) {
            var fd = new FormData();
            fd.append('file', files[i]);

            var status = new createStatusbar(obj); //Using this we can set progress.
            status.setFileNameSize(files[i].name, files[i].size);
            sendFileToServer(fd, status);

        }
    }
    $(document).ready(function () {
        var obj = $("#dragandrophandler");
        obj.on('dragenter', function (e) {
            e.stopPropagation();
            e.preventDefault();
            $(this).css('bvideo', '2px solid #0B85A1');
        });
        obj.on('dragover', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });
        obj.on('drop', function (e) {

            $(this).css('bvideo', '2px dotted #0B85A1');
            e.preventDefault();
            var files = e.originalEvent.dataTransfer.files;

            //We need to send dropped files to Server
            handleFileUpload(files, obj);
        });
        $(document).on('dragenter', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });
        $(document).on('dragover', function (e) {
            e.stopPropagation();
            e.preventDefault();
            obj.css('bvideo', '2px dotted #0B85A1');
        });
        $(document).on('drop', function (e) {
            e.stopPropagation();
            e.preventDefault();
        });

    });
</script>

<form action="" method="post" id="videoForm">
    <fieldset class="no-legend">
        <legend>Fill the following information:</legend>
        <ol>
            <li class="name">
                <label for="videoName">Video Name: </label>
                @Html.TextBoxFor(m => m.Name)
            </li>
            <li class="privacy">
                <label for="videoPrivacy">Is your video private?</label>
                <div class="editor-field">
                    @Html.RadioButtonFor(m => m.IsPrivate, true) Yes
                    @Html.RadioButtonFor(m => m.IsPrivate, false ) No
                </div>
            </li>
            @*<li class="comments">
                <label for="videoComments">Do you want to allow comments from other users?</label>
                <asp:RadioButton ID="rdoButton1C" GroupName="Comments" Text="Yes" Value="Yes" runat="server" OnCheckedChanged="Comments_CheckedChanged" AutoPostBack="true" />
                <asp:RadioButton ID="rdoButton2C" GroupName="Comments" Text="No" Value="No" runat="server" OnCheckedChanged="Comments_CheckedChanged" AutoPostBack="true" />
            </li>*@
        </ol>

        <p class="actions">
            <input type="hidden" name="ProductId" value="" />
            <input type="submit" value="Send information" />
        </p>
    </fieldset>
</form>
